{
	"modelName": "Simple RBA problem",
	"states":
	[
		{
			"name": "X",
			"bound": {
				"type":	"lower",
				"lb":	0,
				"ub":	2e+20
			},
			"expression": "mu"
		 },
		 {
		 	"name": "E_u",
		 	"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	},
		 	"expression": "nu_P_E - nu_CH + 0.1 * (k_u_slope * T + k_u_intercept) * E_f - (k_f + k_a + mu) * E_u"
		 },
		 {
		 	"name": "E_f",
		 	"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	},
		 	"expression": "nu_CH + k_f * E_u - 0.1 * (k_u_slope * T + k_u_intercept) * E_f - mu * E_f"
		 },
		 {
		 	"name": "E_a",
		 	"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	},
		 	"expression": "- nu_DEG + k_a * E_u - mu * E_a"
		 },
		 {
		 	"name": "R",
		 	"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	},
		 	"expression": "nu_P_R - mu * R"
		 },
		 {
		 	"name": "C",
		 	"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	},
		 	"expression": "nu_P_C - mu * C"
		 },
		 {
		 	"name": "P",
		 	"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	},
		 	"expression": "nu_P_P - mu * P"
		 },
		 {
		 	"name": "B",
		 	"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	},
		 	"expression": "nu_P_B - (mu + C_B) * B"
		 },
		 {
		 	"name": "HP",
		 	"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	},
		 	"expression": "nu_P_HP - mu * HP"
		 }
	],
	"controls":
	[
		{
			"name": "nu_P_E",
			"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	}
		},
		{
			"name": "nu_P_R",
			"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	}
		},
		{
			"name": "nu_P_B",
			"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	}
		},
		{
			"name": "nu_P_HP",
			"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	}
		},
		{
			"name": "nu_P_C",
			"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	}
		},
		{
			"name": "nu_P_P",
			"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	}
		},
		{
			"name": "nu_CH",
			"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	}
		},
		{
			"name": "nu_DEG",
			"bound": {
		 		"type":	"lower",
		 		"lb":	0,
		 		"ub":	2e+20
		 	}
		}
	],
	"parameters": 
	[
	],
	"algebraic":
	[
		{
			"name": "mu",
			"bound": {
		 		"type":	"free",
		 		"lb":	0,
		 		"ub":	0
		 	}
		},
		{
			"name": "nu_M",
			"bound": {
		 		"type":	"free",
		 		"lb":	0,
		 		"ub":	0
		 	}
		}
	],
	"constants":
	[
		{
			"name": 	"n_R",
			"value":	20120
		},
		{
			"name":		"n_E",
			"value":	20000
		},
		{
			"name":		"n_HP",
			"value":	300
		},
		{
			"name":		"n_C",
			"value":	5000
		},
		{
			"name":		"n_P",
			"value":	5000
		},
		{
			"name":		"D_c",
			"value":	4.89
		},
		{
			"name": 	"k_R",
			"value":	900
		},
		{
			"name":		"k_R_a",
			"value":	 5.834806
		},
		{
			"name":		"k_R_b",
			"value":	0.273768
		},
		{
			"name":		"k_R_c",
			"value":	 33.563769
		},
		{
			"name":		"k_R_d",
			"value":	0.143328
		},
		{
			"name":		"k_R_slope",
			"value":	42
		},
		{
			"name":		"k_R_intercept",
			"value":	-747.6
		},
		{
			"name":		"k_M",
			"value":	780
		},
		{
			"name":		"k_M_slope",
			"value":	120
		},
		{
			"name":		"k_M_intercept",
			"value":	-3000
		},
		{
			"name":		"k_M_a",
			"value":	2.400713
		},
		{
			"name":		"k_M_b",
			"value":	0.069681
		},
		{
			"name":		"k_M_c",
			"value":	7.816784
		},
		{
			"name":		"k_M_d",
			"value":	0.117543
		},
		{
			"name":		"k_C",
			"value":	1500
		},
		{
			"name":		"k_P",
			"value":	1500
		},
		{
			"name":		"k_f",
			"value":	600
		},
		{
			"name":		"k_u_slope",
			"value":	1.2
		},
		{
			"name":		"k_u_intercept",
			"value":	-32.4
		},
		{
			"name":		"k_a",
			"value":	6
		},
		{
			"name":		"T",
			"value":	30
		},
		{
			"name":		"n_S",
			"value":	0.5
		},
		{
			"name":		"X_0",
			"value":	100
		},
		{
			"name":		"B_0",
			"value":	0.387
		},
		{
			"name":		"HP_0",
			"value":	5e-5
		},
		{
			"name":		"C_B",
			"value":	0.001
		},
		{
			"name":		"E_f_0",
			"value":	0.0
		},
		{
			"name":		"E_a_0",
			"value":	0.0
		},
		{
			"name":		"R_0",
			"value":	0.0
		},
		{
			"name":		"C_0",
			"value":	0.0
		},
		{
			"name":		"P_0",
			"value":	0.0
		}
	],
	"boundarycond":
	[
		{
			"name":	"D_init",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "((E_u_t0 + E_f_t0 + E_a_t0) * n_E + R_t0 * n_R + P_t0 * n_P + C_t0 * n_C + HP_t0 * n_HP) - D_c"
		},
		{
			"name":	"X_init",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "X_t0 - X_0"
		},
		{
			"name": "B_init",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "B_t0 - B_0"
		},
		{
			"name": "HP_init",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "HP_t0 - HP_0"
		},
		{
			"name": "E_f_init",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "E_f_t0 - E_f_0"
		},
		{
			"name": "E_a_init",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "E_a_t0 - E_a_0"
		},
		{
			"name": "R_init",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "R_t0 - R_0"
		},
		{
			"name": "P_init",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "P_t0 - P_0"
		},
		{
			"name": "C_init",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "C_t0 - C_0"
		}
	],
	"pathconstraints":
	[
		{
			"name":	"growth_rate",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "D_c * mu + (n_E * nu_DEG) - (nu_P_E * n_E + nu_P_R * n_R + nu_P_C * n_C + nu_P_P * n_P + nu_P_HP * n_HP)"
		},
		{
			"name": "capacity_met",
			"bound": {
				"type":	"upper",
				"lb":	-2e+20,
				"ub":	0
			},
			"expression": "nu_M + nu_P_B - 60 * (k_M_a / (k_M_b + k_M_c * exp(- k_M_d * T))) * E_f"
		},
		{
			"name": "capacity_ribo",
			"bound": {
				"type":	"upper",
				"lb":	-2e+20,
				"ub":	0
			},
			"expression": "(nu_P_E * n_E + nu_P_R * n_R + nu_P_C * n_C + nu_P_P * n_P + nu_P_HP * n_HP) - 60 * (k_R_a / (k_R_b + k_R_c * exp(- k_R_d * T))) * R"
		},
		{
			"name": "capacity_chaperone",
			"bound": {
				"type":	"upper",
				"lb":	-2e+20,
				"ub":	0
			},
			"expression": "(0.1 * n_HP * nu_P_HP + n_E * (nu_CH + 0.05 * nu_P_E)) - k_C * C"
		},
		{
			"name": "capacity_protease",
			"bound": {
				"type":	"upper",
				"lb":	-2e+20,
				"ub":	0
			},
			"expression": "n_E * nu_DEG - k_P * P"
		},
		{
			"name": "metabolism_ss",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "n_S * nu_M + n_E * nu_DEG - (n_E * nu_P_E + n_R * nu_P_R + n_C * nu_P_C + n_P * nu_P_P + n_HP * nu_P_HP)"
		},
		{
			"name": "B_steady_state",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "nu_P_B - (mu + C_B) * B"
		},
		{
			"name": "HP_steady_state",
			"bound": {
		 		"type":	"equal",
		 		"lb":	0,
		 		"ub":	0
		 	},
		 	"expression": "nu_P_HP - mu * HP"
		}
	],
	"criterion": "- X",
	"time":
	{
		"free": "none",
		"initial": 0,
		"final": 50
	},
	"discretization":
	{
		"steps": 10,
		"method": "euler_imp"
	},
	"fixed_part": "# Optimization :\noptimization.type string single\nbatch.type integer 1\nbatch.index integer -1\nbatch.nrange integer 3\nbatch.lowerbound double 100\nbatch.upperbound double 1000\nbatch.directory string time_step\n\n# Initialization :\ninitialization.type string from_init_file\ninitialization.file string none\n\n# Parameter identification :\nparamid.type string false\nparamid.separator string ,\nparamid.file string no_directory\nparamid.dimension integer 0",
	"solution": {
		"file": "problem.sol"
	}
}